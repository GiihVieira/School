from django.db import models
from django.core.validators import MinLengthValidator


# Define the Estudante model and its attributes.
class Estudante(models.Model): # Define that the Estudante class inherits the attributes and methods from models.Model.
    nome = models.CharField(max_length = 100) # Set the student's name to a maximum of 100 characters.
    email = models.EmailField(blank = False) # Set that the email cannot be left blank.
    cpf = models.CharField(max_length = 11) # Set that the student's CPF must have a maximum of 11 characters.
    data_nascimento = models.DateField() # A model of type Date does not require parameters.
    celular = models.CharField(max_length = 14) # Set that the cellphone number must have a maximum of 14 characters.

    # This function defines how the object generated by the Estudante class will be represented, as an identifier.
    def __str__(self):
        return self.nome

# Define the Curso model and its attributes.
class Curso(models.Model):
    # Define a tuple called NIVEL that will be used as alternatives in choices.
    NIVEL = (
        ('B', 'Básico'),
        ('I', 'Intermediário'),
        ('A', 'Avançado')
    )
    codigo = models.CharField(max_length = 10, unique = True, validators = [MinLengthValidator(3)]) # max_length defines the maximum size of the field, and through validators, it defines the minimum value of 3 characters.
    descricao = models.CharField(max_length = 100, blank = False)
    nivel = models.CharField(max_length = 1, choices = NIVEL, blank=False, null=False, default = 'B') # choices provides a selection from the options present in the tuple defined with NIVEL.

    # This function defines how the object generated by the Curso class will be represented, as an identifier.
    def __str__(self):
        return self.codigo
    
# Define the Matrícula model.
class Matricula(models.Model):
    # Define a tuple called PERIODO that will be used as alternatives in choices.
    PERIODO = (
        ('M', 'Matutino'),
        ('V', 'Vespertino'),
        ('N', 'Noturno')
    )    
    ''' 
    The ForeignKey method is used to create a Many-to-One relationship, used to link one object to another. 
    That is, if the Estudante is deleted, all enrollments (matrículas) of that student should also be deleted.
    '''
    estudante = models.ForeignKey(Estudante, on_delete = models.CASCADE)
    curso = models.ForeignKey(Curso, on_delete = models.CASCADE)
    periodo = models.CharField(max_length = 1, choices = PERIODO, blank = False, null = False, default = 'M') 
